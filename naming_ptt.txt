Introduction (1‚Äì2 minutes)

Good evening, everyone.
Today, I‚Äôll be talking about Chapter 5: Naming from Distributed Systems: Principles and Paradigms 

When we think about distributed systems‚Äîsystems where multiple computers work together as one‚Äîone of the biggest challenges is: how do we find and access resources? Whether it‚Äôs a file on another computer, a web service, or a printer in another office, we need a way to identify, locate, and connect to it.

This is where naming comes in. Naming provides the essential mechanism to map human-readable labels to actual objects in a system. In the next 15 minutes, I‚Äôll explain what naming is, the types of names, how resolution works, the main naming systems, some real-world examples, and the challenges we face when designing naming services.


1. What is Naming? (2 minutes)

At its core, naming is about assigning labels to objects so that they can be found and used. Objects could be files, processes, devices, or even services in the cloud.

Think about the Internet. You don‚Äôt type an IP address like 142.250.190.78 into your browser‚Äîyou type google.com. That‚Äôs naming at work. The system resolves the name into an actual network address so you can connect to the right server.

Without naming, distributed systems would be too complex to use. Imagine trying to memorize hundreds of IP addresses instead of simple domain names.

2. Why Naming Matters (2 minutes)

Naming plays several critical roles in distributed systems:

It enables resource discovery. Users and programs can find resources without knowing exactly where they are stored.

It simplifies interaction. Human-readable names are much easier to use than raw identifiers.

It supports mobility. Resources like processes or virtual machines can move between machines, but the name stays the same.

It provides the foundation for directories and higher-level services, such as LDAP or Active Directory, which organize and manage resources on a large scale.

In short, naming makes distributed systems usable, scalable, and flexible.

3. Types of Names (2 minutes)

In the book, three important categories of names are described:

Identifiers ‚Äì These are unique and permanent labels for objects. For example, a process ID or a UUID. Once assigned, they are never reused.

Addresses ‚Äì These tell us where the object is located, such as an IP address pointing to a server.

Human-readable names ‚Äì These are the names people actually use, like google.com or /home/user/file.txt.

A key insight here is that while identifiers are stable and unique, addresses may change, and names are designed for humans. Distributed systems must manage the mappings between all three.

4. Name Resolution (2 minutes)

Naming would be useless without resolution. Resolution is the process of translating a human-readable name into the actual identifier or address of the resource.

The best-known example is the Domain Name System, or DNS. When you type www.example.com
, DNS resolves it into the correct IP address so your computer can connect to the server.

In distributed systems, resolution is typically handled by specialized naming services. These services are designed to be scalable, fault-tolerant, and efficient, because millions of lookups can happen every second.


5. Naming Systems (2‚Äì3 minutes)

The book describes several approaches to structuring names:

Flat naming: No structure, just unique identifiers. This works for small systems but does not scale well.

Hierarchical naming: A tree-like structure. DNS is the classic example. It organizes names into domains, making management easier and scalable.

Attribute-based naming: Instead of using a fixed label, you search for resources by properties, such as ‚Äúfind all printers on the second floor.‚Äù This is very powerful for dynamic and large environments.

Each system has trade-offs. Flat naming is simple, hierarchical naming is scalable, and attribute-based naming is flexible but complex to implement.


6. Directory and Lookup Services (2 minutes)

Beyond just resolution, many systems need directories that store rich information about resources.

For example:

LDAP or Active Directory in enterprise environments. These don‚Äôt just map names to addresses, but also store attributes like permissions, group memberships, or roles.

These services support queries, updates, and replication so that they remain consistent across multiple servers.

Directories are crucial when distributed systems scale to thousands or millions of resources.



Conclusion (1‚Äì2 minutes)


Naming is a fundamental concept in distributed systems. It allows us to assign labels to objects, resolve those labels to identifiers or addresses, and manage them at scale. We explored the types of names, how resolution works, the different naming systems, and the challenges we face.

The importance of naming cannot be overstated‚Äîwithout it, distributed systems as we know them would simply not work. Systems like DNS, LDAP, and distributed file system naming schemes make the modern Internet and enterprise computing possible.

Thank you for your attention. I‚Äôd be happy to answer any questions.




üé§ 15 –º–∏–Ω—É—Ç—ã–Ω –∏–ª—Ç–≥—ç–ª

Distributed Systems: Principles and Paradigms
5-—Ä –±“Ø–ª—ç–≥: Naming (–ù—ç—Ä—à–∏–ª)

–û—Ä—à–∏–ª (1‚Äì2 –º–∏–Ω—É—Ç)

–°–∞–π–Ω –±–∞–π–Ω–∞ —É—É? ”®–Ω”©”©–¥”©—Ä –±–∏ Distributed Systems: Principles and Paradigms –Ω–æ–º—ã–Ω 5-—Ä –±“Ø–ª—ç–≥ ‚Äì Naming (–ù—ç—Ä—à–∏–ª) —Å—ç–¥–≤—ç—ç—Ä —Ç–∞–Ω–∏–ª—Ü—É—É–ª–≥–∞ —Ö–∏–π—Ö –≥—ç–∂ –±–∞–π–Ω–∞.

–¢–∞—Ä—Ö—Å–∞–Ω —Å–∏—Å—Ç–µ–º –±—É—é—É distributed system –≥—ç–¥—ç–≥ –Ω—å –æ–ª–æ–Ω –±–∏–µ –¥–∞–∞—Å–∞–Ω –∫–æ–º–ø—å—é—Ç–µ—Ä“Ø“Ø–¥–∏–π–≥ –Ω—ç–≥—ç–Ω –±“Ø—Ö—ç–ª —Å–∏—Å—Ç–µ–º –º—ç—Ç –∞–∂–∏–ª–ª—É—É–ª–¥–∞–≥ –æ–π–ª–≥–æ–ª—Ç. –•–∞—Ä–∏–Ω –∏–π–º —Å–∏—Å—Ç–µ–º–¥ —Ö–∞–º–≥–∏–π–Ω —Ç–æ–º –∞—Å—É—É–¥–ª—É—É–¥—ã–Ω –Ω—ç–≥ –±–æ–ª: –ë–∏–¥ –Ω”©”©—Ü”©”© —Ö—ç—Ä—Ö—ç–Ω –æ–ª–æ—Ö, —Ö–∞–Ω–¥–∞—Ö –≤—ç?

–§–∞–π–ª, “Ø–π–ª —è–≤—Ü, —Ç”©—Ö”©”©—Ä”©–º–∂ —ç—Å–≤—ç–ª –∞–ª—Å—ã–Ω “Ø–π–ª—á–∏–ª–≥—ç—ç –≥—ç—ç–¥ –±“Ø–≥–¥–∏–π–≥ —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ—Ö—ã–Ω —Ç—É–ª–¥ –±–∏–¥—ç–Ω–¥ –Ω—ç—Ä—à–ª–∏–π–Ω —Å–∏—Å—Ç–µ–º —Ö—ç—Ä—ç–≥—Ç—ç–π –±–æ–ª–¥–æ–≥. ”®”©—Ä”©”©—Ä —Ö—ç–ª–±—ç–ª, Naming –≥—ç–¥—ç–≥ –Ω—å —Ö“Ø–Ω–∏–π –æ–π–ª–≥–æ—Ö–æ–¥ —Ö—è–ª–±–∞—Ä –Ω—ç—Ä–∏–π–≥ —Å–∏—Å—Ç–µ–º –¥–æ—Ç–æ—Ä—Ö –±–æ–¥–∏—Ç –æ–±—ä–µ–∫—Ç—Ç–æ–π —Ö–æ–ª–±–æ—Ö “Ø–π–ª —è–≤—Ü —é–º.

1. Naming –≥—ç–∂ —é—É –≤—ç? (2 –º–∏–Ω—É—Ç)

Naming –±–æ–ª –æ–±—ä–µ–∫—Ç—É—É–¥–∞–¥ –Ω—ç—Ä ”©–≥—á, —Ç“Ø“Ø–≥—ç—ç—Ä –Ω—å —Ö—è–ª–±–∞—Ä—Ö–∞–Ω —Ç–∞–Ω–∏—Ö –∞—Ä–≥–∞ —é–º. –û–±—ä–µ–∫—Ç –≥—ç–¥—ç–≥—Ç —Ñ–∞–π–ª, “Ø–π–ª —è–≤—Ü, —Ç”©—Ö”©”©—Ä”©–º–∂, —ç—Å–≤—ç–ª cloud-–¥ –±–∞–π—Ä–ª–∞—Ö “Ø–π–ª—á–∏–ª–≥—ç—ç —á –±–∞–≥—Ç–∞–Ω–∞.

–ñ–∏—à—ç—ç–ª–±—ç–ª, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥—ç—ç—Ä –±–∏–¥ 142.250.190.78 –≥—ç—Ö –º—ç—Ç IP —Ö–∞—è–≥–∏–π–≥ —Å–∞–Ω–∞—Ö—ã–Ω –æ—Ä–æ–Ω–¥ google.com –≥—ç–∂ –±–∏—á–¥—ç–≥. –≠–Ω—ç –±–æ–ª –Ω—ç—Ä—à–ª–∏–π–Ω —Å–∏—Å—Ç–µ–º–∏–π–Ω –∞—á–∞–∞—Ä –±–æ–ª–æ–º–∂—Ç–æ–π –∑“Ø–π–ª.

–•—ç—Ä—ç–≤ naming –±–∞–π—Ö–≥“Ø–π –±–æ–ª —Ç–∞—Ä—Ö—Å–∞–Ω —Å–∏—Å—Ç–µ–º–∏–π–≥ –∞—à–∏–≥–ª–∞—Ö–∞–¥ —Ö—ç—Ç—ç—Ä—Ö–∏–π —Ç”©–≤”©–≥—Ç—ç–π –±–∞–π—Ö –±–∞–π—Å–∞–Ω.

2. Naming-–∏–π–Ω –∞—á —Ö–æ–ª–±–æ–≥–¥–æ–ª (2 –º–∏–Ω—É—Ç)

Naming-–∏–π–Ω –≥–æ–ª –∞—á —Ö–æ–ª–±–æ–≥–¥–æ–ª—É—É–¥ –Ω—å:

–ù”©”©—Ü —Ö–∞–π–ª—Ç (resource discovery) ‚Äì —Ö—ç—Ä—ç–≥–ª—ç–≥—á –±–æ–ª–æ–Ω –ø—Ä–æ–≥—Ä–∞–º—É—É–¥ —è–≥ —Ö–∞–∞–Ω–∞ –±–∞–π–≥–∞–∞–≥ –º—ç–¥—ç—Ö–≥“Ø–π –±–∞–π—Å–∞–Ω —á –Ω”©”©—Ü”©”© –æ–ª–æ—Ö –±–æ–ª–æ–º–∂—Ç–æ–π.

–•—è–ª–±–∞—Ä—à—É—É–ª–∞—Ö ‚Äì —Ö“Ø–Ω–∏–π –æ–π–ª–≥–æ—Ö–æ–¥ —Ö—è–ª–±–∞—Ä –Ω—ç—Ä –∞—à–∏–≥–ª–∞—Ö –Ω—å IP —ç—Å–≤—ç–ª –∫–æ–¥–æ–æ—Å –∏–ª“Ø“Ø –æ–π–ª–≥–æ–º–∂—Ç–æ–π.

–•”©–¥”©–ª–≥”©”©–Ω—Ç —á–∞–Ω–∞—Ä ‚Äì –Ω”©”©—Ü ”©”©—Ä —Å–µ—Ä–≤–µ—Ä —Ä“Ø“Ø —à–∏–ª–∂—Å—ç–Ω —á –Ω—ç—Ä ”©”©—Ä—á–ª”©–≥–¥”©—Ö–≥“Ø–π.

–°–∫–∞–ª–∞–±–µ–ª—å —á–∞–Ω–∞—Ä –±–∞ –ª–∞–≤–ª–∞—Ö “Ø–π–ª—á–∏–ª–≥—ç—ç ‚Äì LDAP, Active Directory –≥—ç—Ö –º—ç—Ç –ª–∞–≤–ª–∞—Ö—É—É–¥ –Ω—ç—Ä—à–∏–ª –¥—ç—ç—Ä —Å—É—É—Ä–∏–ª–∂ –∞–∂–∏–ª–ª–∞–¥–∞–≥.

3. –ù—ç—Ä–∏–π–Ω —Ç”©—Ä–ª“Ø“Ø–¥ (2 –º–∏–Ω—É—Ç)

–ù–æ–º–æ–Ω–¥ –≥—É—Ä–≤–∞–Ω “Ø–Ω–¥—Å—ç–Ω –Ω—ç—Ä–∏–π–≥ —è–ª–≥–∞–∂ —Ç–∞–π–ª–±–∞—Ä–ª–∞—Å–∞–Ω –±–∞–π–¥–∞–≥:

Identifier (–¢–æ–¥–æ—Ä—Ö–æ–π–ª–æ–≥—á): –î–∞–≤—Ç–∞–≥–¥–∞—à–≥“Ø–π, –±–∞–π–Ω–≥–∞ –Ω—ç–≥ –æ–±—ä–µ–∫—Ç—Ç–æ–π —Ö–æ–ª–±–æ–æ—Ç–æ–π. –ñ–∏—à—ç—ç –Ω—å process ID.

Address (–•–∞—è–≥): –û–±—ä–µ–∫—Ç —Ö–∞–∞–Ω–∞ –±–∞–π–≥–∞–∞–≥ –∑–∞–∞–¥–∞–≥. –ñ–∏—à—ç—ç –Ω—å IP —Ö–∞—è–≥.

Human-readable name (–•“Ø–Ω–∏–π –æ–π–ª–≥–æ—Ö–æ–¥ —Ö—è–ª–±–∞—Ä –Ω—ç—Ä): –ñ–∏—à—ç—ç –Ω—å google.com —ç—Å–≤—ç–ª /home/user/file.txt.

–¢–∞—Ä—Ö—Å–∞–Ω —Å–∏—Å—Ç–µ–º–¥ —ç–¥–≥—ç—ç—Ä –≥—É—Ä–≤–∞–Ω –æ–π–ª–≥–æ–ª—Ç—ã–≥ –∑”©–≤ —Ö–æ–ª–±–æ–∂ –∞–∂–∏–ª–ª—É—É–ª–∞—Ö –Ω—å —á—É—Ö–∞–ª.

4. –ù—ç—Ä —Ö—É–≤–∏—Ä–≥–∞–ª—Ç (Name Resolution) (2 –º–∏–Ω—É—Ç)

Naming-–∏–π–Ω –≥–æ–ª “Ø“Ø—Ä—ç–≥ –±–æ–ª –Ω—ç—Ä–∏–π–≥ –±–æ–¥–∏—Ç —Ö–∞—è–≥ —ç—Å–≤—ç–ª —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ–≥—á –±–æ–ª–≥–æ–Ω —Ö—É–≤–∏—Ä–≥–∞—Ö —è–≤–¥–∞–ª —é–º.

–ñ–∏—à—ç—ç –Ω—å, –±–∏–¥ www.example.com
 –≥—ç–∂ –±–∏—á–∏—Ö—ç–¥ DNS —Å–∏—Å—Ç–µ–º —Ç“Ø“Ø–Ω–∏–π–≥ IP —Ö–∞—è–≥ –±–æ–ª–≥–æ–Ω —Ö—É–≤–∏—Ä–≥–∞–∂ ”©–≥–¥”©–≥. –≠–Ω—ç “Ø–π–ª —è–≤—Ü—ã–≥ name resolution –≥—ç–Ω—ç.

–ò–π–º —Ö—É–≤–∏—Ä–≥–∞–ª—Ç—ã–≥ –Ω—ç—Ä—à–ª–∏–π–Ω —Ç—É—Å–≥–∞–π “Ø–π–ª—á–∏–ª–≥—ç—ç –≥“Ø–π—Ü—ç—Ç–≥—ç–¥—ç–≥ –±”©–≥”©”©–¥ —Ç—ç–¥–≥—ç—ç—Ä –Ω—å —Ö—É—Ä–¥—Ç–∞–π, –Ω–∞–π–¥–≤–∞—Ä—Ç–∞–π, ”©—Ä–≥”©—Ç–≥”©—Ö –±–æ–ª–æ–º–∂—Ç–æ–π –±–∞–π—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π.

5. Naming —Å–∏—Å—Ç–µ–º“Ø“Ø–¥ (2‚Äì3 –º–∏–Ω—É—Ç)

–ù—ç—Ä—à–ª–∏–π–≥ —Ö—ç—Ä—ç–≥–∂“Ø“Ø–ª—ç—Ö –æ–ª–æ–Ω –∞—Ä–≥–∞ –±–∏–π:

Flat naming: –ó”©–≤—Ö”©–Ω –Ω—ç–≥ –¥–∞–≤—Ö–∞—Ä–≥—ã–Ω, –±“Ø—Ç—ç—Ü–≥“Ø–π –Ω—ç—Ä—à–∏–ª. –ñ–∏–∂–∏–≥ —Å–∏—Å—Ç–µ–º–¥ —Ç–æ—Ö–∏—Ä–æ–º–∂—Ç–æ–π —á –º–∞—Å—à—Ç–∞–±–ª–∞—Ö–∞–¥ —Ö“Ø–Ω–¥—Ä—ç–ª—Ç—ç–π.

Hierarchical naming: –ú–æ–¥–æ–Ω –±“Ø—Ç—ç—Ü—Ç—ç–π. DNS –±–æ–ª “Ø“Ø–Ω–∏–π —Å–æ–Ω–≥–æ–¥–æ–≥ –∂–∏—à—ç—ç. –î—ç–ª—Ö–∏–π –¥–∞—è–∞—Ä ”©—Ä–≥”©–Ω —Ö—ç—Ä—ç–≥–ª—ç–≥–¥–¥—ç–≥.

Attribute-based naming: –û–±—ä–µ–∫—Ç—ã–Ω —à–∏–Ω–∂ —á–∞–Ω–∞—Ä–∞–∞—Ä —Ö–∞–π–¥–∞–≥. –ñ–∏—à—ç—ç –Ω—å ‚Äú—Ö–æ—ë—Ä–¥—É–≥–∞–∞—Ä –¥–∞–≤—Ö—Ä—ã–Ω –±“Ø—Ö –ø—Ä–∏–Ω—Ç–µ—Ä“Ø“Ø–¥–∏–π–≥ —Ö–∞–π—Ö.‚Äù –≠–Ω—ç –Ω—å –º–∞—à —É—è–Ω —Ö–∞—Ç–∞–Ω –±–æ–ª–æ–≤—á —Ö—ç—Ä—ç–≥–∂“Ø“Ø–ª—ç—Ö—ç–¥ —Ç”©–≤”©–≥—Ç—ç–π.

6. –õ–∞–≤–ª–∞—Ö –±–∞ —Ö–∞–π–ª—Ç—ã–Ω “Ø–π–ª—á–∏–ª–≥—ç—ç (2 –º–∏–Ω—É—Ç)

–ó”©–≤—Ö”©–Ω –Ω—ç—Ä —Ö—É–≤–∏—Ä–≥–∞—Ö –±–∏—à, –∑–∞—Ä–∏–º–¥–∞–∞ –Ω”©”©—Ü–∏–π–Ω —Ç–∞–ª–∞–∞—Ä—Ö –Ω—ç–º—ç–ª—Ç –º—ç–¥—ç—ç–ª—ç–ª —Ö—ç—Ä—ç–≥—Ç—ç–π –±–æ–ª–¥–æ–≥.

–ñ–∏—à—ç—ç–ª–±—ç–ª:

LDAP, Active Directory –∑—ç—Ä—ç–≥ –Ω—å –∑”©–≤—Ö”©–Ω –Ω—ç—Ä–∏–π–≥ —Ö–∞—è–≥—Ç —Ö—É–≤–∏—Ä–≥–∞—Ö–∞–∞—Å –≥–∞–¥–Ω–∞ —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω —ç—Ä—Ö, –±“Ø–ª–≥–∏–π–Ω –≥–∏—à“Ø“Ø–Ω—á–ª—ç–ª –≥—ç—Ö –º—ç—Ç –º—ç–¥—ç—ç–ª–ª–∏–π–≥ —Ö–∞–¥–≥–∞–ª–¥–∞–≥.

–≠–¥–≥—ç—ç—Ä —Å–∏—Å—Ç–µ–º“Ø“Ø–¥ –Ω—å –∞—Å—É—É–ª–≥–∞, —à–∏–Ω—ç—á–ª—ç–ª—Ç –±–æ–ª–æ–Ω —Ö—É—É–ª–±–∞—Ä—ã–≥ –¥—ç–º–∂–¥—ç–≥.

7. Naming-–∏–π–Ω –±—ç—Ä—Ö—à—ç—ç–ª“Ø“Ø–¥ (2 –º–∏–Ω—É—Ç)

–ù—ç—Ä—à–ª–∏–π–Ω —Å–∏—Å—Ç–µ–º–¥ —Ç—É–ª–≥–∞—Ä–¥–∞–≥ —Å–æ—Ä–∏–ª—Ç—É—É–¥:

Scalability (–ú–∞—Å—à—Ç–∞–±–ª–∞—Ö —á–∞–¥–≤–∞—Ä): –ò–Ω—Ç–µ—Ä–Ω–µ—Ç—ç–¥ —Ç—ç—Ä–±—É–º –≥–∞—Ä—É–π —Ç”©—Ö”©”©—Ä”©–º–∂ –±–∞–π–¥–∞–≥. –°–∏—Å—Ç–µ–º —ç–Ω—ç –∏—Ö –Ω—ç—Ä–∏–π–≥ –¥—ç–º–∂–∏—Ö —ë—Å—Ç–æ–π.

Mobility (–•”©–¥”©–ª–≥”©”©–Ω—Ç –±–∞–π–¥–∞–ª): –ì–∞—Ä —É—Ç–∞—Å, —Å–µ—Ä–≤–µ—Ä“Ø“Ø–¥ –±–∞–π—Ä—à–ª–∞–∞ ”©”©—Ä—á–∏–ª—Å”©–Ω —á –Ω—ç—Ä —Ö—ç–≤—ç—ç—Ä –∞–∂–∏–ª–ª–∞—Ö —ë—Å—Ç–æ–π.

Replication (–•—É—É–ª–±–∞—Ä): –ù—ç–≥ –Ω”©”©—Ü –æ–ª–æ–Ω —Ö—É—É–ª–±–∞—Ä—Ç–∞–π –±–∞–π—Ö “Ø–µ–¥ –∑”©–≤ –∑–æ—Ö–∏—Ü—É—É–ª–∞—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π.

Security (–ê—é—É–ª–≥“Ø–π –±–∞–π–¥–∞–ª): DNS spoofing –∑—ç—Ä—ç–≥ —Ö–∞–ª–¥–ª–∞–≥–∞–∞—Å —Ö–∞–º–≥–∞–∞–ª–∞—Ö—ã–Ω —Ç—É–ª–¥ —à–∏—Ñ—Ä–ª—ç–ª, –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞–ª—Ç —Ö—ç—Ä—ç–≥—Ç—ç–π.

8. –ë–æ–¥–∏—Ç –∂–∏—à—ç—ç–Ω“Ø“Ø–¥ (1‚Äì2 –º–∏–Ω—É—Ç)

DNS: –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–∏–π–Ω “Ø–Ω–¥—Å—ç–Ω –Ω—ç—Ä—à–ª–∏–π–Ω —Å–∏—Å—Ç–µ–º. –ë–∏–¥ ”©–¥”©—Ä –±“Ø—Ä –∞—à–∏–≥–ª–∞–¥–∞–≥.

DHCP: –î–∏–Ω–∞–º–∏–∫ IP —Ö–∞—è–≥ –æ–ª–≥–æ–¥–æ–≥.

Distributed File Systems (NFS, AFS): –ù—ç–≥ —Ñ–∞–π–ª—ã–≥ —Å“Ø–ª–∂—ç—ç–≥—ç—ç—Ä –æ–ª–æ–Ω —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ –Ω—ç—Ä—ç—ç—Ä –Ω—å —Ö—è–ª–±–∞—Ä—Ö–∞–Ω —Ö–∞–Ω–¥–¥–∞–≥.

–î“Ø–≥–Ω—ç–ª—Ç (1‚Äì2 –º–∏–Ω—É—Ç)

–¢—ç–≥—ç—Ö—ç—ç—Ä, Naming –±–æ–ª —Ç–∞—Ä—Ö—Å–∞–Ω —Å–∏—Å—Ç–µ–º–∏–π–Ω —Å–∞–ª—à–≥“Ø–π —Ö—ç—Å—ç–≥.

–≠–Ω—ç –Ω—å –æ–±—ä–µ–∫—Ç—É—É–¥–∞–¥ –Ω—ç—Ä ”©–≥—á, —Ç“Ø“Ø–Ω–∏–π–≥ —Ö–∞—è–≥ —ç—Å–≤—ç–ª —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ–≥—á—Ç–æ–π —Ö–æ–ª–±–æ–∂ ”©–≥–¥”©–≥.

DNS, LDAP –∑—ç—Ä—ç–≥ —Å–∏—Å—Ç–µ–º“Ø“Ø–¥ –±–æ–ª –±–∏–¥–Ω–∏–π ”©–¥”©—Ä —Ç—É—Ç–º—ã–Ω —Ö—ç—Ä—ç–≥–ª—ç—ç–Ω–¥ —à—É—É–¥ —Ö—ç—Ä—ç–≥–ª—ç–≥–¥—ç–∂ –±–∞–π–≥–∞–∞ –∂–∏—à—ç—ç.

–•–∞—Ä–∏–Ω —Ç–æ–º–æ–æ—Ö–æ–Ω —Å–æ—Ä–∏–ª—Ç—É—É–¥ –±–æ–ª –º–∞—Å—à—Ç–∞–±–ª–∞—Ö, —Ö”©–¥”©–ª–≥”©”©–Ω—Ç —á–∞–Ω–∞—Ä, —Ö—É—É–ª–±–∞—Ä—ã–Ω –Ω–∏–π—Ü—Ç—ç–π –±–∞–π–¥–∞–ª, –∞—é—É–ª–≥“Ø–π –±–∞–π–¥–∞–ª —é–º.

Naming –±–∞–π—Ö–≥“Ø–π –±–æ–ª —Ç–∞—Ä—Ö—Å–∞–Ω —Å–∏—Å—Ç–µ–º“Ø“Ø–¥ –±–∏–¥–Ω–∏–π ”©–Ω”©”©–¥”©—Ä –º—ç–¥—ç—Ö —à–∏–≥—ç—ç—Ä –∞–∂–∏–ª–ª–∞—Ö –±–æ–ª–æ–º–∂–≥“Ø–π –±–∞–π—Ö –±–∞–π–ª–∞–∞.

–ë–∞—è—Ä–ª–∞–ª–∞–∞, –∞—Å—É—É–ª—Ç –±–∞–π–≤–∞–ª —Ö–∞—Ä–∏—É–ª–∞—Ö–∞–¥ –±—ç–ª—ç–Ω –±–∞–π–Ω–∞.




Slide 1 ‚Äì Title Slide

‚ÄúGood [morning/afternoon], everyone. Today I will present Chapter 5 from Distributed Systems: Principles and Paradigms, which is about Naming.

Naming is a fundamental concept in distributed systems because it determines how we find, access, and manage resources across a network. Over the next 15 minutes, I‚Äôll walk you through the main ideas, challenges, and real-world examples of naming.‚Äù


Slide 2 ‚Äì Introduction

‚ÄúSo, what is naming?

In a distributed system, we have many different resources ‚Äì files, devices, services, or processes. Naming is simply the act of assigning them names so we can identify and access them.

For example, when you type google.com, you don‚Äôt need to know its IP address. That‚Äôs naming in action ‚Äì making distributed systems usable.‚Äù


Slide 3 ‚Äì Role of Naming

‚ÄúNaming plays several important roles:

Resource discovery: it helps us find resources without knowing their exact location.

Human-friendly access: instead of numbers, we use meaningful names.

Location independence: even if a resource moves, its name can stay the same.

Scalability: as systems grow, naming allows management of billions of objects.

So naming is much more than just labels‚Äîit enables distributed systems to function smoothly.‚Äù


Slide 4 ‚Äì Types of Names

‚ÄúThere are three main types of names in distributed systems:

Identifiers ‚Äì unique and permanent, like process IDs.

Addresses ‚Äì show the location, such as IP addresses.

Human-readable names ‚Äì designed for people, like domain names or file paths.

A good naming system connects all three, so a human-readable name maps to an address, and then to a unique identifier.‚Äù


Slide 5 ‚Äì Name Resolution

‚ÄúThe process of converting a name into an address or identifier is called name resolution.

For instance, when you type www.example.com
, the DNS system converts it into an IP address so your browser can connect.

Name resolution must be fast, reliable, and scalable, otherwise the whole distributed system would slow down.‚Äù



Slide 6 ‚Äì Naming Systems

‚ÄúDifferent distributed systems use different naming structures:

Flat naming ‚Äì simple but not scalable.

Hierarchical naming ‚Äì tree-like structures, like DNS, which is scalable worldwide.

Attribute-based naming ‚Äì search by properties, for example: ‚Äòfind all printers on the second floor.‚Äô

The hierarchical approach, like DNS, is the most widely used because it balances simplicity and scalability.‚Äù


Slide 8 ‚Äì Challenges in Naming

‚ÄúOf course, naming comes with challenges:

Scalability ‚Äì the system must handle billions of names.

Mobility ‚Äì resources, like mobile devices, move between networks.

Replication ‚Äì if a resource exists in multiple places, the naming must stay consistent.

Security ‚Äì we must prevent attacks like DNS spoofing or name hijacking.

So designing a naming system is not just technical, but also about security and reliability.‚Äù


Slide 10 ‚Äì Conclusion

‚ÄúTo conclude, naming is a critical component of distributed systems.

It allows us to:

Identify and discover resources.

Provide user-friendly access.

Support scalability and mobility.

Ensure reliability and security.

Without naming, distributed systems would not be practical or usable. Systems like DNS, LDAP, and distributed file systems all show us how essential naming really is.‚Äù